#!/bin/sh

portmgr="antoine bapt bdrewery mat rene swills tcberner"

refname=$1
oldrev=$2
newrev=$3
oldtree=$4
newtree=$5
access_flag=$6
refex=$7
repo=$8

reject()
{
	echo "================================================================"
	echo "$1"
	echo "================================================================"
	exit 1
}

# create: 0000->1234
# update: 1234->5678
# delete: 5678->0000
if expr "$oldrev" : '0*$' >/dev/null; then
	change_type="create"
	obj_type=$(git cat-file -t "${newrev}" 2> /dev/null)
elif expr "$newrev" : '0*$' >/dev/null; then
	change_type="delete"
	obj_type=$(git cat-file -t "${oldrev}" 2> /dev/null)
else
	change_type="update"
	obj_type=$(git cat-file -t "${newrev}" 2> /dev/null)
fi

case "${refname}" in
refs/tags/*)
	if [ ${obj_type} = "tag" ]; then
		# allow annotated tag
		return 0
	fi
	# un-annotated tag
	reject "Tags should be annotated."
	;;
refs/heads/main)
	# allowed reference
	exit 0
	;;
refs/heads/vendor/*)
	# allowed reference
	if [ ${repo} != "src" ]; then
		reject "Disallowed reference: ${refname}"
	fi
	exit 0
	;;
refs/heads/stable/*)
	if [ ${repo} != "src" ]; then
		reject "Disallowed reference: ${refname}"
	fi
	if [ ${change_type} = "create" ] && [ ${refname} != "refs/heads/stable/14" ] ; then
		reject "Disallowed create reference: ${refname}"
	fi
	# allowed reference
	exit 0
	;;
refs/heads/releng/*)
	if [ ${repo} != "src" ]; then
		reject "Disallowed reference: ${refname}"
	fi
	# allowed reference
	exit 0
	;;
refs/heads/[0-9][0-9][0-9][0-9]Q[1-4])
	# allowed reference in ports
	if [ ${repo} != "ports" ]; then
		reject "Disallowed reference: ${refname}"
	fi
	if [ ${change_type} = "create" ]; then
		for i in ${portmgr}; do
			if [ ${GL_USER} = ${i} ]; then
				exit 0
			fi
		done
		reject "Only portmgr can create new ports branch"
	fi
	exit 0
	;;
refs/internal/admin)
	# allowed reference
	exit 0
	;;
*)
	reject "Disallowed reference: ${refname}"
	;;
esac

# reject by default
exit 1
